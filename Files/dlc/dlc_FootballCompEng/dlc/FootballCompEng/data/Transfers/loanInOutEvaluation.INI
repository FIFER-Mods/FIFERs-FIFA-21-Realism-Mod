[LOAN_INOUT_WAGE_SPLIT]
// wage split percentage that will be paid by the team that loans in the player
// LOAN_IN_STARS_ - star rating of the team that loans the player
// LOAN_OUT_STARS_ - star rating of the team that loans out the player
// (MOD) these values are broken. the only ones that matter are the same star values that match (LOAN_IN_STARS_1_LOAN_OUT_STARS_1, then loanin2loanout2, etc all the way to 5). for instance, LOAN_IN_STARS_5_LOAN_OUT_STARS_5 defines how much the LOAN IN team will [pay of the salary if they are loaning a player from a 5 star team]
LOAN_IN_STARS_1_LOAN_OUT_STARS_1 = 100
LOAN_IN_STARS_1_LOAN_OUT_STARS_2 = 0
LOAN_IN_STARS_1_LOAN_OUT_STARS_3 = 0
LOAN_IN_STARS_1_LOAN_OUT_STARS_4 = 0
LOAN_IN_STARS_1_LOAN_OUT_STARS_5 = 0

LOAN_IN_STARS_2_LOAN_OUT_STARS_1 = 0
LOAN_IN_STARS_2_LOAN_OUT_STARS_2 = 50
LOAN_IN_STARS_2_LOAN_OUT_STARS_3 = 0
LOAN_IN_STARS_2_LOAN_OUT_STARS_4 = 0
LOAN_IN_STARS_2_LOAN_OUT_STARS_5 = 0

LOAN_IN_STARS_3_LOAN_OUT_STARS_1 = 0
LOAN_IN_STARS_3_LOAN_OUT_STARS_2 = 0
LOAN_IN_STARS_3_LOAN_OUT_STARS_3 = 50
LOAN_IN_STARS_3_LOAN_OUT_STARS_4 = 0
LOAN_IN_STARS_3_LOAN_OUT_STARS_5 = 0

LOAN_IN_STARS_4_LOAN_OUT_STARS_1 = 0
LOAN_IN_STARS_4_LOAN_OUT_STARS_2 = 0
LOAN_IN_STARS_4_LOAN_OUT_STARS_3 = 0
LOAN_IN_STARS_4_LOAN_OUT_STARS_4 = 35
LOAN_IN_STARS_4_LOAN_OUT_STARS_5 = 0

LOAN_IN_STARS_5_LOAN_OUT_STARS_1 = 0
LOAN_IN_STARS_5_LOAN_OUT_STARS_2 = 0
LOAN_IN_STARS_5_LOAN_OUT_STARS_3 = 0
LOAN_IN_STARS_5_LOAN_OUT_STARS_4 = 0
LOAN_IN_STARS_5_LOAN_OUT_STARS_5 = 25

// used to make a range of acceptance [perc .. perc + wiggle], upper range clamped to 100
WIGGLE_ROOM_PERCENTAGE = 5

[LOAN_INOUT_WAGE_SPLIT_ACCEPTANCE]
// scene acceptance minimum chances for the wage split when the user proposed value is within the desired range
// this is the minimum value, the remaining up to 100% is calculated based on how close the proposed value is to the most favorable edge of the range
// i.e. if the AI loans in and he wants a split range of [20 - 40] with 20 being most favorable, the acceptance chance is MIN_CHANCE + (100 - MIN_CHANCE) * (40 - proposed) / (40 - 20)
// thus, closer to 100% if the proposed is close to 20, close to MIN_CHANCE if the proposed is far from 20.
LOAN_IN_MIN_CHANCE = 50
LOAN_OUT_MIN_CHANCE = 50

[CPU_LOAN_HUB_BEHAVIOR]
// the AI will retract the offer if the user does not answer in this number of days
// (MOD) made longer
RETRACT_OFFER_AFTER_DAYS_OUTSIDE_WINDOW = 18
RETRACT_OFFER_AFTER_DAYS_INSIDE_WINDOW = 9
RETRACT_OFFER_AFTER_HOURS_INSIDE_DEADLINE_DAY = 6

[CPU_LOAN_SCENE_BEHAVIOR]
// round the wage split proposed by the AI to the closest value that is a multiple of the value below, i.e. 5 would round all values to the nearest multiple of 5: 13 to 15, 12 to 10
// (MOD) increased AI counters. wage split round to is a cool value, but imo it shouldnt be made lower than 5, considering FM21 deals with 10% intigers
WAGE_SPLIT_ROUND_TO = 5
MAX_AI_COUNTERS = 5


[LOAN_TO_BUY_PLAYER_WPA_BOOSTS]
// AI adds a modifier to the player's Weak Point Analysis score based on the player's potential/ovr ratio scores
// The AI ranks the player among the squad area (att, mid, def, gk) based on his boosted WPA score
// The ratio values must be in decreasing order
BOOST_COUNT = 3

BOOST_1_RATIO = 1.15
BOOST_1_VALUE = 5
BOOST_2_RATIO = 1.05
BOOST_2_VALUE = 3
BOOST_3_RATIO = 1.00
BOOST_3_VALUE = 0

[LOAN_TO_BUY_PRICE_BOOSTS]
WAGE_SPLIT_BOOST_REFERENCE = 40	// If the wage split is below this number, the LOW_SPLIT values will apply, otherwise the HIGH_SPLIT values will apply

// The AI buyer will want to pay a smaller fee considering that he will support a big portion of the player's wages
BUYER_HIGH_SPLIT_MIN_PRICE_0 = -10	// short term
BUYER_HIGH_SPLIT_MAX_PRICE_0 = -5
BUYER_LOW_SPLIT_MIN_PRICE_0 = -5
BUYER_LOW_SPLIT_MAX_PRICE_0 = -0
BUYER_HIGH_SPLIT_MIN_PRICE_1 = -15	// one year
BUYER_HIGH_SPLIT_MAX_PRICE_1 = -10
BUYER_LOW_SPLIT_MIN_PRICE_1 = -5
BUYER_LOW_SPLIT_MAX_PRICE_1 = -0
BUYER_HIGH_SPLIT_MIN_PRICE_2 = -20	// two years
BUYER_HIGH_SPLIT_MAX_PRICE_2 = -15
BUYER_LOW_SPLIT_MIN_PRICE_2 = -5
BUYER_LOW_SPLIT_MAX_PRICE_2 = -0

// The AI seller would want to get more money considering it's a try before you buy scenario, and even more if he is still going to support a big portion of the player's wages
SELLER_HIGH_SPLIT_MIN_PRICE_0 = 15	// short term
SELLER_HIGH_SPLIT_MAX_PRICE_0 = 10
SELLER_LOW_SPLIT_MIN_PRICE_0 = 5
SELLER_LOW_SPLIT_MAX_PRICE_0 = 5
SELLER_HIGH_SPLIT_MIN_PRICE_1 = 20	// one year
SELLER_HIGH_SPLIT_MAX_PRICE_1 = 15
SELLER_LOW_SPLIT_MIN_PRICE_1 = 10
SELLER_LOW_SPLIT_MAX_PRICE_1 = 5
SELLER_HIGH_SPLIT_MIN_PRICE_2 = 25	// two years
SELLER_HIGH_SPLIT_MAX_PRICE_2 = 20
SELLER_LOW_SPLIT_MIN_PRICE_2 = 15
SELLER_LOW_SPLIT_MAX_PRICE_2 = 10

// the player must be in the top PLAYER_IN_AREA_PERCENTAGE_FOR_BUY % in his area to allow a buy (used for both loan in and out)
PLAYER_IN_AREA_PERCENTAGE_FOR_BUY = 35
// max percentage of the transfer budget to allow a buy when loaning in
LOAN_IN_TO_BUY_MAX_BUDGET_PERCENTAGE = 60
// team should have at most this many excess players in that area to allow a buy
LOAN_IN_TO_BUY_MAX_EXCESS_PLAYERS = 2
// team should have at most this many excess players in that area to desire a loan to buy only (won't accept norma loan)
LOAN_IN_TO_BUY_MAX_EXCESS_PLAYERS_LTB_ONLY = 1